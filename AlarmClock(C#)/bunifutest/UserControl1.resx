<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkF1THpIeXZQTllBTWE=
</value>
  </data>
</root>